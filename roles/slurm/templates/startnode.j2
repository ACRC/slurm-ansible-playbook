#! /bin/bash
set -euo pipefail
IFS=$'\n\t'

LOGFILE=/home/slurm/elastic.log

COMPARTMENT="{{ compartment_ocid }}"
AD_ROOT=$(/opt/oci-cli/bin/oci compute instance list --compartment-id="${COMPARTMENT}" | jq --raw-output '.data[] | select(."display-name" == "mgmt") | select(."lifecycle-state" != "TERMINATED") | ."availability-domain"' | sed 's/.$//')
VCN=$(/opt/oci-cli/bin/oci network vcn list --compartment-id="${COMPARTMENT}" | jq --raw-output '.data[] | select(."display-name" == "ClusterVCN") | .id')
SSHKEY=$(paste -sd '~' /home/slurm/opc_authorized_keys | sed 's/~/\\n/g')

hosts=$(scontrol show hostnames "$1")
for host in ${hosts}
do
  echo "$(date): Starting ${host}" &>> ${LOGFILE}

  #/opt/oci-cli/bin/oci compute image list --compartment-id="ocid1.compartment.oc1..aaaaaaaag6t4jsvae6wpaeoyrgt35qkjvl5uxtao4guatxawiuu64cn25l5a" | jq --raw-output '.data[] | select(."operating-system" == "Oracle Linux") | select(."operating-system-version" | startswith("7.")) | select(."display-name" | contains("GPU") | not) | first'

  AD="${AD_ROOT}${AD_NUMBER}"  # TODO
  SUBNET=$(/opt/oci-cli/bin/oci network subnet list --compartment-id="${COMPARTMENT}" --vcn-id="${VCN}" | jq --raw-output '.data[] | select(."display-name" == "SubnetAD'"${AD_NUMBER}"'") | .id')
  SHAPE=$(sinfo --Format="features:200" --noheader --nodes="${host}" | grep -o 'shape=[^,]*' | sed 's/shape=//' | tr -d '[:space:]')
  IMAGE="ocid1.image.oc1.eu-frankfurt-1.aaaaaaaa527xpybx2azyhcz2oyk6f4lsvokyujajo73zuxnnhcnp7p24pgva"

  # Check existing sources to see if the node has been seen before.
  # If it has then we should reuse the IP address.
  DNSIP=$(host "${host}" | awk '{print $NF}' | grep -Eo '[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+' || true)
  SLURMIP=$(scontrol show node "${host}" | grep -Eo 'NodeAddr=[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+' | grep -o '[[:digit:]].*' || true)
  if [[ -n "${DNSIP}" ]]
  then
    IP=${DNSIP}
  elif [[ -n "${SLURMIP}" ]]
  then
    IP=${SLURMIP}
  else
    IP=""
  fi

  # Create the flag to set the IP if wanted
  if [[ -n "${IP}" ]]
  then
    IPSTRING="--private-ip=${IP}"
  else
    IPSTRING=""
  fi

  LAUNCHNODEDATA=$(/opt/oci-cli/bin/oci compute instance launch --compartment-id="${COMPARTMENT}" --availability-domain="${AD}" --shape="${SHAPE}" --subnet-id="${SUBNET}" --image-id="${IMAGE}" --display-name="${host}" --hostname-label="${host}" ${IPSTRING} --metadata='{"ssh_authorized_keys":"'"${SSHKEY}"'", "user_data":"'"$(base64 --wrap=0 /home/slurm/bootstrap.sh)"'"}')
  NODEID=$(echo "${LAUNCHNODEDATA}" | jq --raw-output '.data | .id')

  until /opt/oci-cli/bin/oci compute vnic-attachment list --compartment-id="${COMPARTMENT}" | jq --exit-status '.data[] | select(."instance-id" == "'"${NODEID}"'")' > /dev/null 2>&1
  do
    echo "$(date): No VNIC attachment yet. Waiting..." &>> ${LOGFILE}
    sleep 5
  done

  VNICID=$(/opt/oci-cli/bin/oci compute vnic-attachment list --compartment-id="${COMPARTMENT}" | jq --raw-output '.data[] | select(."instance-id" == "'"${NODEID}"'") | ."vnic-id"')
  PRIVATEIP=$(/opt/oci-cli/bin/oci network vnic get --vnic-id="${VNICID}" | jq --raw-output '.data | ."private-ip"')

  echo "$(date): Private IP ${PRIVATEIP}" &>> ${LOGFILE}
  scontrol update NodeName="${host}" NodeAddr="${PRIVATEIP}"
done
