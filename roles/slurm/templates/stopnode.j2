#! /opt/oci/bin/python

import logging
import subprocess
import sys

import oci

log = logging.getLogger("stopnode")

log.setLevel(logging.INFO)
handler = logging.FileHandler('/var/log/slurm/elastic.log')
formatter = logging.Formatter('%(asctime)s %(name)-10s %(levelname)-8s %(message)s')
handler.setFormatter(formatter)
log.addHandler(handler)

config = oci.config.from_file()

compartment_id = "{{ compartment_ocid }}"

hosts = subprocess.run(["scontrol", "show", "hostnames", sys.argv[1]], stdout=subprocess.PIPE).stdout.decode().split()

for host in hosts:
    log.info(f"Stopping {host}")

    try:
        matching_nodes = oci.core.ComputeClient(config).list_instances(compartment_id, display_name=host).data
        node_id = [n.id for n in matching_nodes if n.lifecycle_state not in {"TERMINATED", "TERMINATING"}][0]

        oci.core.ComputeClient(config).terminate_instance(node_id)
    except Exception as e:
        log.error(f" problem while stopping: {e}")
        continue

    log.info(f" Stopped {host}")
